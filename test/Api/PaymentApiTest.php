<?php
/**
 * PaymentApiTest
 * PHP version 5
 *
 * @category Class
 * @package  FirstData\FirstApi\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Payment Gateway API Specification
 *
 * Payment Gateway API for payment processing.
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace FirstData\FirstApi\Client;

use \FirstData\FirstApi\Client\Configuration;
use \FirstData\FirstApi\Client\ApiException;
use \FirstData\FirstApi\Client\ObjectSerializer;

/**
 * PaymentApiTest Class Doc Comment
 *
 * @category Class
 * @package  FirstData\FirstApi\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PaymentApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for performPaymentPostAuthorisation
     *
     * Use this to capture/complete a transaction. Partial postauths are allowed..
     *
     */
    public function testPerformPaymentPostAuthorisation()
    {
    }

    /**
     * Test case for primaryPaymentTransaction
     *
     * Generate a primary transaction.
     *
     */
    public function testPrimaryPaymentTransaction()
    {
    }

    /**
     * Test case for returnTransaction
     *
     * Return/refund a transaction..
     *
     */
    public function testReturnTransaction()
    {
    }

    /**
     * Test case for transactionInquiry
     *
     * Retrieve the state of a transaction.
     *
     */
    public function testTransactionInquiry()
    {
    }

    /**
     * Test case for voidTransaction
     *
     * Reverse a previous action on an existing transaction.
     *
     */
    public function testVoidTransaction()
    {
    }
}
